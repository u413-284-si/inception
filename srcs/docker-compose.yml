
services:
  nginx:
    build: requirements/nginx/.
    image: nginx
    container_name: nginx
    init: true
    security_opt:
      - no-new-privileges:true
    depends_on:
      - wordpress
      - mariadb
    secrets:
      - site_key
      - site_cert
    ports:
      - 443:443
    deploy:
      restart_policy:
        condition: always
        window: 120s
    volumes:
      - ./wp-data:/var/www/html
      - ./requirements/bonus/website:/var/www/showcase
    networks:
      - inception

  wordpress:
    build: requirements/wordpress/.
    image: wordpress
    container_name: wp-php
    init: true
    security_opt:
      - no-new-privileges:true
    secrets:
      - db_user_password
      - wordpress_admin_password
      - wordpress_user_password
      - redis_user_password
    depends_on:
      - mariadb
      - redis
    deploy:
      restart_policy:
        condition: always
        window: 120s
    env_file:
      - ./.env
    volumes:
      - ./wp-data:/var/www/html
    networks:
      - inception

  mariadb:
    build: requirements/mariadb/.
    image: mariadb
    container_name: mariadb
    init: true
    security_opt:
      - no-new-privileges:true
    secrets:
      - db_root_password
      - db_user_password
    deploy:
      restart_policy:
        condition: always
        window: 120s
    env_file:
      - ./.env
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - inception

  redis:
    build: requirements/bonus/redis/.
    image: redis
    container_name: redis
    init: true
    security_opt:
      - no-new-privileges:true
    secrets:
      - redis_user_password
    deploy:
      restart_policy:
        condition: always
        window: 120s
    env_file:
      - ./.env
    volumes:
      - ./wp-data:/var/www/html
    networks:
      - inception

  adminer:
    build: requirements/bonus/adminer/.
    image: adminer
    container_name: adminer
    init: true
    security_opt:
      - no-new-privileges:true
    depends_on:
      - mariadb
    deploy:
      restart_policy:
        condition: always
        window: 120s
    env_file:
      - ./.env
    volumes:
      - ./wp-data:/var/www/html
    networks:
      - inception

  ftp:
    build:
      context: requirements/bonus/ftp/.
      args:
        FTP_USER: ${FTP_USER}
    image: ftp
    container_name: ftp
    init: true
    depends_on:
      - wordpress
    security_opt:
      - no-new-privileges:true
    secrets:
      - ftp_user_password
    deploy:
      restart_policy:
        condition: always
        window: 120s
    env_file:
      - ./.env
    ports:
       - "21:21"
       - "20:20"
       - "40000-40005:40000-40005"
    volumes:
      - ./wp-data:/home/slim/ftp/files
    networks:
      - inception
  
  cadvisor:
    build: requirements/bonus/cAdvisor/.
    image: cadvisor
    container_name: cadvisor
    init: true
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: always
        window: 120s
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro 
      - /sys:/sys:ro 
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - inception

networks:
  inception:

# use the local filesystem on the host machine to store the volume's data
volumes:
  db-data:
    driver: local
  wp-data:
    driver: local

secrets:
  site_key:
    file: ../secrets/site.key
  site_cert:
    file: ../secrets/site.crt
  db_root_password:
    file: ../secrets/db_root_password
  db_user_password:
    file: ../secrets/db_user_password
  wordpress_admin_password:
    file: ../secrets/wordpress_admin_password
  wordpress_user_password:
    file: ../secrets/wordpress_user_password
  redis_user_password:
    file: ../secrets/redis_user_password
  ftp_user_password:
    file: ../secrets/ftp_user_password
